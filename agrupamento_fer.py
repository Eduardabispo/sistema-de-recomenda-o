# -*- coding: utf-8 -*-
"""agrupamento fer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16KGlwy8osfDLxCHoNfr5JSKPzFUowZIK
"""

-# Importando bibliotecas necessárias
import numpy as np
from sklearn.cluster import KMeans
import pandas as pd


#1º Passo: especificar o caminho do arquivo CSV
caminho_arquivo = '/content/produtos_usuarios.csv'

# 2º Passo: Ler o CVS usando pandas
df = pd.read_csv(caminho_arquivo)

# Exibir o cabeçalho do arquivo para verificar se foi lido corretamente
print(df.head())

# Matriz com os produtos acessados
produtos_acessados = df.drop(columns=["Unnamed: 0"]).values

# Definindo o número de clusters (Grupos)
num_cluster = 2

# Inicializar o modelo
kmeans = KMeans(n_clusters=num_cluster, random_state=0, n_init=10)

# Treinado o modelo
kmeans.fit(produtos_acessados)

# Classificando os usuários
grupos_indice = kmeans.predict(produtos_acessados)

# Exibir os dados
print("foi acessado")
for i, cluster in enumerate(grupos_indice):
    print(f"Usuário {i+1} acessou {cluster+1}")

print("\nProdutos_acessados:")
for i in range(len(produtos_acessados)):
   produtos_acessados = np.where(produtos_acessados[i] == 1)[0] + 1
   print(f"Usuário {i+1} acessou: {acessados}")

# Função que recomeda produto
def recomendar_produtos(produtos_acessados, grupos_indice):

produtos= np.array(produtos)
  # Encontrar o grupo do usuário com base em seu vetor de produtos assistidos
  usuário_id = len(produtos_acessados)
  grupo_usuário = kmeans.predict([produtos])[0]

  # Encontrar todos os usuários do mesmo grupo
  usuário_no_mesmo_grupo = [i for i in range(len(grupos_indice)) if grupos_indice[i] == grupo_usuário]

  # produtos acessados pelos usuários no mesmo grupo
  produtos_acessados = set()
  for usuário in usuário_no_mesmo_grupo:
   produtos_acessados_usuário = np.where(produtos_acessados[usuário] == 1)[0]
   produtos_recomendados.update(produtos_acessados_usuário)

  # Remover produtos que o usuário já assitiu
    produtos_recomendados = produtos_recomendados - set(np.where(produtos == 1)[0])

  # Ajustar os índices dos produtos recomendados (de volta para 1-based)
 produtos_acessados = [produto + 1 for produto in produtos_recomendados]

  return sorted(produtos_recomendados)

# Exemplo de uso de função recomendar produtos
produtos_acessados_usuario = [1, 0, 1, 0, 0, 1, 1, 0, 1, 0] # Vetor de produto
#acessados (por exemplo, acessou produtos 1 e 3)
produtos_recomendados = recomendar_produtos(produtos_acessados_usuario, produtos_acessados, grupos_indice)

print(f"\nProdutos_acessados: {produtos_recomendados}")